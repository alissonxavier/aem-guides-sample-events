/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/*
 * ADOBE CONFIDENTIAL
 *
 * Copyright 2018 Adobe Systems Incorporated
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */
/**
 * Selector that identifies the node that contains the WCM mode state
 */
var /** @type {?} */ WCM_MODE_META_SELECTOR = 'meta[property="cq:wcmmode"]';
/**
 * The editor is in one of the edition modes
 */
var /** @type {?} */ EDIT_MODE = 'edit';
/**
 * The editor is in preview mode
 */
var /** @type {?} */ PREVIEW_MODE = 'preview';
/**
 * Returns if we are in the browser context or not by checking for the
 * existence of the window object
 * @return {?}
 */
function isBrowser() {
    try {
        return typeof window !== 'undefined';
    }
    catch (/** @type {?} */ e) {
        return false;
    }
}
/**
 * Returns the current WCM mode
 *
 * <p>Note that the value isn't, as of the date of this writing, updated by the editor</p>
 * @return {?}
 */
function getWCMMode() {
    if (isBrowser()) {
        var /** @type {?} */ wcmModeMeta = document.head.querySelector(WCM_MODE_META_SELECTOR);
        return wcmModeMeta && wcmModeMeta.content;
    }
}
/**
 * Helper functions for interacting with the AEM environment
 */
export var /** @type {?} */ Utils = {
    /**
     * Is the app used in the context of the AEM Page editor
     */
    isInEditor: /**
     * Is the app used in the context of the AEM Page editor
     * @return {?}
     */
    function () {
        var /** @type {?} */ wcmMode = getWCMMode();
        return wcmMode && (EDIT_MODE === wcmMode || PREVIEW_MODE === wcmMode);
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWRvYmUvY3EtYW5ndWxhci1lZGl0YWJsZS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2xheW91dC91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQSxxQkFBTSxzQkFBc0IsR0FBVSw2QkFBNkIsQ0FBQzs7OztBQUtwRSxxQkFBTSxTQUFTLEdBQVUsTUFBTSxDQUFDOzs7O0FBS2hDLHFCQUFNLFlBQVksR0FBVSxTQUFTLENBQUM7Ozs7OztBQUt0QztJQUNJLElBQUksQ0FBQztRQUNELE1BQU0sQ0FBQyxPQUFPLE1BQU0sS0FBSyxXQUFXLENBQUM7S0FDeEM7SUFBQyxLQUFLLENBQUMsQ0FBQyxpQkFBQSxDQUFDLEVBQUUsQ0FBQztRQUNULE1BQU0sQ0FBQyxLQUFLLENBQUM7S0FDaEI7Q0FDSjs7Ozs7OztBQU9EO0lBQ0ksRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLHFCQUFNLFdBQVcsR0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQzVFLE1BQU0sQ0FBQyxXQUFXLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQztLQUMzQztDQUNKOzs7O0FBS0QsTUFBTSxDQUFDLHFCQUFNLEtBQUssR0FBRztJQUVqQjs7T0FFRztJQUNILFVBQVU7Ozs7O1FBQ04scUJBQU0sT0FBTyxHQUFHLFVBQVUsRUFBRSxDQUFDO1FBQzdCLE1BQU0sQ0FBQyxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTyxJQUFJLFlBQVksS0FBSyxPQUFPLENBQUMsQ0FBQztLQUN6RTtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQURPQkUgQ09ORklERU5USUFMXG4gKlxuICogQ29weXJpZ2h0IDIwMTggQWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWRcbiAqIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTk9USUNFOiAgQWxsIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gaXMsIGFuZCByZW1haW5zXG4gKiB0aGUgcHJvcGVydHkgb2YgQWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWQgYW5kIGl0cyBzdXBwbGllcnMsXG4gKiBpZiBhbnkuICBUaGUgaW50ZWxsZWN0dWFsIGFuZCB0ZWNobmljYWwgY29uY2VwdHMgY29udGFpbmVkXG4gKiBoZXJlaW4gYXJlIHByb3ByaWV0YXJ5IHRvIEFkb2JlIFN5c3RlbXMgSW5jb3Jwb3JhdGVkIGFuZCBpdHNcbiAqIHN1cHBsaWVycyBhbmQgbWF5IGJlIGNvdmVyZWQgYnkgVS5TLiBhbmQgRm9yZWlnbiBQYXRlbnRzLFxuICogcGF0ZW50cyBpbiBwcm9jZXNzLCBhbmQgYXJlIHByb3RlY3RlZCBieSB0cmFkZSBzZWNyZXQgb3IgY29weXJpZ2h0IGxhdy5cbiAqIERpc3NlbWluYXRpb24gb2YgdGhpcyBpbmZvcm1hdGlvbiBvciByZXByb2R1Y3Rpb24gb2YgdGhpcyBtYXRlcmlhbFxuICogaXMgc3RyaWN0bHkgZm9yYmlkZGVuIHVubGVzcyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24gaXMgb2J0YWluZWRcbiAqIGZyb20gQWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWQuXG4gKi9cblxuLyoqXG4gKiBTZWxlY3RvciB0aGF0IGlkZW50aWZpZXMgdGhlIG5vZGUgdGhhdCBjb250YWlucyB0aGUgV0NNIG1vZGUgc3RhdGVcbiAqL1xuY29uc3QgV0NNX01PREVfTUVUQV9TRUxFQ1RPUjpzdHJpbmcgPSAnbWV0YVtwcm9wZXJ0eT1cImNxOndjbW1vZGVcIl0nO1xuXG4vKipcbiAqIFRoZSBlZGl0b3IgaXMgaW4gb25lIG9mIHRoZSBlZGl0aW9uIG1vZGVzXG4gKi9cbmNvbnN0IEVESVRfTU9ERTpzdHJpbmcgPSAnZWRpdCc7XG5cbi8qKlxuICogVGhlIGVkaXRvciBpcyBpbiBwcmV2aWV3IG1vZGVcbiAqL1xuY29uc3QgUFJFVklFV19NT0RFOnN0cmluZyA9ICdwcmV2aWV3Jztcbi8qKlxuICogUmV0dXJucyBpZiB3ZSBhcmUgaW4gdGhlIGJyb3dzZXIgY29udGV4dCBvciBub3QgYnkgY2hlY2tpbmcgZm9yIHRoZVxuICogZXhpc3RlbmNlIG9mIHRoZSB3aW5kb3cgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgV0NNIG1vZGVcbiAqXG4gKiA8cD5Ob3RlIHRoYXQgdGhlIHZhbHVlIGlzbid0LCBhcyBvZiB0aGUgZGF0ZSBvZiB0aGlzIHdyaXRpbmcsIHVwZGF0ZWQgYnkgdGhlIGVkaXRvcjwvcD5cbiAqL1xuZnVuY3Rpb24gZ2V0V0NNTW9kZSgpIHtcbiAgICBpZiAoaXNCcm93c2VyKCkpIHtcbiAgICAgIGNvbnN0IHdjbU1vZGVNZXRhOmFueSA9IGRvY3VtZW50LmhlYWQucXVlcnlTZWxlY3RvcihXQ01fTU9ERV9NRVRBX1NFTEVDVE9SKTtcbiAgICAgIHJldHVybiB3Y21Nb2RlTWV0YSAmJiB3Y21Nb2RlTWV0YS5jb250ZW50O1xuICAgIH1cbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBBRU0gZW52aXJvbm1lbnRcbiAqL1xuZXhwb3J0IGNvbnN0IFV0aWxzID0ge1xuXG4gICAgLyoqXG4gICAgICogSXMgdGhlIGFwcCB1c2VkIGluIHRoZSBjb250ZXh0IG9mIHRoZSBBRU0gUGFnZSBlZGl0b3JcbiAgICAgKi9cbiAgICBpc0luRWRpdG9yKCkge1xuICAgICAgICBjb25zdCB3Y21Nb2RlID0gZ2V0V0NNTW9kZSgpO1xuICAgICAgICByZXR1cm4gd2NtTW9kZSAmJiAoRURJVF9NT0RFID09PSB3Y21Nb2RlIHx8IFBSRVZJRVdfTU9ERSA9PT0gd2NtTW9kZSk7XG4gICAgfVxufTtcbiJdfQ==