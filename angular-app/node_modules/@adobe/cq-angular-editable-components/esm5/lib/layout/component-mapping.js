/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/*
 * ADOBE CONFIDENTIAL
 *
 * Copyright 2018 Adobe Systems Incorporated
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */
import { ComponentMapping as SPAComponentMapping } from '@adobe/cq-spa-component-mapping';
/**
 * The current class extends the \@adobe/cq-spa-component-mapping#Mapto library and features with Angular specifics such as
 *
 * - Storing the editing configurations for each resource type
 */
var /**
 * The current class extends the \@adobe/cq-spa-component-mapping#Mapto library and features with Angular specifics such as
 *
 * - Storing the editing configurations for each resource type
 */
ComponentMappingWithConfig = /** @class */ (function () {
    function ComponentMappingWithConfig(spaMapping) {
        this.spaMapping = spaMapping;
        /**
         * Store of EditConfig structures
         */
        this.editConfigMap = {};
    }
    /**
     * Stores a component class for the given resource types and also allows to provide an EditConfig object
     * @param resourceTypes - List of resource types
     * @param clazz - Component class to be stored
     * @param [editConfig] - Edit configuration to be stored for the given resource types
     */
    /**
     * Stores a component class for the given resource types and also allows to provide an EditConfig object
     * @param {?} resourceTypes - List of resource types
     * @param {?} clazz - Component class to be stored
     * @param {?=} editConfig
     * @return {?}
     */
    ComponentMappingWithConfig.prototype.map = /**
     * Stores a component class for the given resource types and also allows to provide an EditConfig object
     * @param {?} resourceTypes - List of resource types
     * @param {?} clazz - Component class to be stored
     * @param {?=} editConfig
     * @return {?}
     */
    function (resourceTypes, clazz, editConfig) {
        if (editConfig === void 0) { editConfig = null; }
        var /** @type {?} */ innerClass = clazz;
        if (editConfig) {
            this.editConfigMap[resourceTypes] = editConfig;
        }
        this.spaMapping.map(resourceTypes, innerClass);
    };
    ;
    /**
     * Returns the component class for the given resourceType
     * @param resourceType - Resource type for which the component class has been stored
     */
    /**
     * Returns the component class for the given resourceType
     * @param {?} resourceType - Resource type for which the component class has been stored
     * @return {?}
     */
    ComponentMappingWithConfig.prototype.get = /**
     * Returns the component class for the given resourceType
     * @param {?} resourceType - Resource type for which the component class has been stored
     * @return {?}
     */
    function (resourceType) {
        return this.spaMapping.get(resourceType);
    };
    /**
     * Returns the EditConfig structure for the given type
     * @param resourceType - Resource type for which the configuration has been stored
     */
    /**
     * Returns the EditConfig structure for the given type
     * @param {?} resourceType - Resource type for which the configuration has been stored
     * @return {?}
     */
    ComponentMappingWithConfig.prototype.getEditConfig = /**
     * Returns the EditConfig structure for the given type
     * @param {?} resourceType - Resource type for which the configuration has been stored
     * @return {?}
     */
    function (resourceType) {
        return this.editConfigMap[resourceType];
    };
    return ComponentMappingWithConfig;
}());
/**
 * The current class extends the \@adobe/cq-spa-component-mapping#Mapto library and features with Angular specifics such as
 *
 * - Storing the editing configurations for each resource type
 */
export { ComponentMappingWithConfig };
function ComponentMappingWithConfig_tsickle_Closure_declarations() {
    /**
     * Store of EditConfig structures
     * @type {?}
     */
    ComponentMappingWithConfig.prototype.editConfigMap;
    /** @type {?} */
    ComponentMappingWithConfig.prototype.spaMapping;
}
var /** @type {?} */ componentMapping = new ComponentMappingWithConfig(SPAComponentMapping);
/**
 * @param {?} resourceTypes
 * @return {?}
 */
function MapTo(resourceTypes) {
    return function (clazz, editConfig) {
        if (editConfig === void 0) { editConfig = null; }
        return componentMapping.map(resourceTypes, clazz, editConfig);
    };
}
export { componentMapping as ComponentMapping, MapTo };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LW1hcHBpbmcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWRvYmUvY3EtYW5ndWxhci1lZGl0YWJsZS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2xheW91dC9jb21wb25lbnQtbWFwcGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsZ0JBQWdCLElBQUksbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7O0FBTzFGOzs7OztBQUFBO0lBTUUsb0NBQW9CLFVBQThCO1FBQTlCLGVBQVUsR0FBVixVQUFVLENBQW9COzs7OzZCQUYxQixFQUFFO0tBRTRCO0lBRXREOzs7OztPQUtHOzs7Ozs7OztJQUNILHdDQUFHOzs7Ozs7O0lBQUgsVUFBSSxhQUFhLEVBQUUsS0FBSyxFQUFFLFVBQWlCO1FBQWpCLDJCQUFBLEVBQUEsaUJBQWlCO1FBQ3ZDLHFCQUFJLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFFdkIsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNiLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLEdBQUcsVUFBVSxDQUFDO1NBQ2xEO1FBQ0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0tBQ2xEO0lBQUEsQ0FBQztJQUVGOzs7T0FHRzs7Ozs7O0lBQ0gsd0NBQUc7Ozs7O0lBQUgsVUFBSSxZQUFZO1FBQ2QsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO0tBQzFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSCxrREFBYTs7Ozs7SUFBYixVQUFjLFlBQVk7UUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDekM7cUNBN0RIO0lBOERDLENBQUE7Ozs7OztBQXRDRCxzQ0FzQ0M7Ozs7Ozs7Ozs7QUFFRCxxQkFBSSxnQkFBZ0IsR0FBRyxJQUFJLDBCQUEwQixDQUFDLG1CQUFtQixDQUFDLENBQUM7Ozs7O0FBRTNFLGVBQWUsYUFBYTtJQUN4QixNQUFNLENBQUMsVUFBQyxLQUFLLEVBQUUsVUFBaUI7UUFBakIsMkJBQUEsRUFBQSxpQkFBaUI7UUFDNUIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0tBQ2pFLENBQUM7Q0FDTDtBQUdELE9BQU8sRUFBRSxnQkFBZ0IsSUFBSSxnQkFBZ0IsRUFBRSxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBBRE9CRSBDT05GSURFTlRJQUxcbiAqXG4gKiBDb3B5cmlnaHQgMjAxOCBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZFxuICogQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBOT1RJQ0U6ICBBbGwgaW5mb3JtYXRpb24gY29udGFpbmVkIGhlcmVpbiBpcywgYW5kIHJlbWFpbnNcbiAqIHRoZSBwcm9wZXJ0eSBvZiBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZCBhbmQgaXRzIHN1cHBsaWVycyxcbiAqIGlmIGFueS4gIFRoZSBpbnRlbGxlY3R1YWwgYW5kIHRlY2huaWNhbCBjb25jZXB0cyBjb250YWluZWRcbiAqIGhlcmVpbiBhcmUgcHJvcHJpZXRhcnkgdG8gQWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWQgYW5kIGl0c1xuICogc3VwcGxpZXJzIGFuZCBtYXkgYmUgY292ZXJlZCBieSBVLlMuIGFuZCBGb3JlaWduIFBhdGVudHMsXG4gKiBwYXRlbnRzIGluIHByb2Nlc3MsIGFuZCBhcmUgcHJvdGVjdGVkIGJ5IHRyYWRlIHNlY3JldCBvciBjb3B5cmlnaHQgbGF3LlxuICogRGlzc2VtaW5hdGlvbiBvZiB0aGlzIGluZm9ybWF0aW9uIG9yIHJlcHJvZHVjdGlvbiBvZiB0aGlzIG1hdGVyaWFsXG4gKiBpcyBzdHJpY3RseSBmb3JiaWRkZW4gdW5sZXNzIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbiBpcyBvYnRhaW5lZFxuICogZnJvbSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZC5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnRNYXBwaW5nIGFzIFNQQUNvbXBvbmVudE1hcHBpbmcgfSBmcm9tICdAYWRvYmUvY3Etc3BhLWNvbXBvbmVudC1tYXBwaW5nJztcblxuLyoqXG4gKiBUaGUgY3VycmVudCBjbGFzcyBleHRlbmRzIHRoZSBAYWRvYmUvY3Etc3BhLWNvbXBvbmVudC1tYXBwaW5nI01hcHRvIGxpYnJhcnkgYW5kIGZlYXR1cmVzIHdpdGggQW5ndWxhciBzcGVjaWZpY3Mgc3VjaCBhc1xuICpcbiAqIC0gU3RvcmluZyB0aGUgZWRpdGluZyBjb25maWd1cmF0aW9ucyBmb3IgZWFjaCByZXNvdXJjZSB0eXBlXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21wb25lbnRNYXBwaW5nV2l0aENvbmZpZyB7XG4gIC8qKlxuICAgKiBTdG9yZSBvZiBFZGl0Q29uZmlnIHN0cnVjdHVyZXNcbiAgICovXG4gIHByaXZhdGUgZWRpdENvbmZpZ01hcCA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3BhTWFwcGluZzpTUEFDb21wb25lbnRNYXBwaW5nKSB7fVxuXG4gIC8qKlxuICAgKiBTdG9yZXMgYSBjb21wb25lbnQgY2xhc3MgZm9yIHRoZSBnaXZlbiByZXNvdXJjZSB0eXBlcyBhbmQgYWxzbyBhbGxvd3MgdG8gcHJvdmlkZSBhbiBFZGl0Q29uZmlnIG9iamVjdFxuICAgKiBAcGFyYW0gcmVzb3VyY2VUeXBlcyAtIExpc3Qgb2YgcmVzb3VyY2UgdHlwZXNcbiAgICogQHBhcmFtIGNsYXp6IC0gQ29tcG9uZW50IGNsYXNzIHRvIGJlIHN0b3JlZFxuICAgKiBAcGFyYW0gW2VkaXRDb25maWddIC0gRWRpdCBjb25maWd1cmF0aW9uIHRvIGJlIHN0b3JlZCBmb3IgdGhlIGdpdmVuIHJlc291cmNlIHR5cGVzXG4gICAqL1xuICBtYXAocmVzb3VyY2VUeXBlcywgY2xhenosIGVkaXRDb25maWcgPSBudWxsKSB7XG4gICAgICBsZXQgaW5uZXJDbGFzcyA9IGNsYXp6O1xuXG4gICAgICBpZiAoZWRpdENvbmZpZykge1xuICAgICAgICAgIHRoaXMuZWRpdENvbmZpZ01hcFtyZXNvdXJjZVR5cGVzXSA9IGVkaXRDb25maWc7XG4gICAgICB9XG4gICAgICB0aGlzLnNwYU1hcHBpbmcubWFwKHJlc291cmNlVHlwZXMsIGlubmVyQ2xhc3MpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBjb21wb25lbnQgY2xhc3MgZm9yIHRoZSBnaXZlbiByZXNvdXJjZVR5cGVcbiAgICogQHBhcmFtIHJlc291cmNlVHlwZSAtIFJlc291cmNlIHR5cGUgZm9yIHdoaWNoIHRoZSBjb21wb25lbnQgY2xhc3MgaGFzIGJlZW4gc3RvcmVkXG4gICAqL1xuICBnZXQocmVzb3VyY2VUeXBlKSB7XG4gICAgcmV0dXJuIHRoaXMuc3BhTWFwcGluZy5nZXQocmVzb3VyY2VUeXBlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBFZGl0Q29uZmlnIHN0cnVjdHVyZSBmb3IgdGhlIGdpdmVuIHR5cGVcbiAgICogQHBhcmFtIHJlc291cmNlVHlwZSAtIFJlc291cmNlIHR5cGUgZm9yIHdoaWNoIHRoZSBjb25maWd1cmF0aW9uIGhhcyBiZWVuIHN0b3JlZFxuICAgKi9cbiAgZ2V0RWRpdENvbmZpZyhyZXNvdXJjZVR5cGUpIHtcbiAgICByZXR1cm4gdGhpcy5lZGl0Q29uZmlnTWFwW3Jlc291cmNlVHlwZV07XG4gIH1cbn1cblxubGV0IGNvbXBvbmVudE1hcHBpbmcgPSBuZXcgQ29tcG9uZW50TWFwcGluZ1dpdGhDb25maWcoU1BBQ29tcG9uZW50TWFwcGluZyk7XG5cbmZ1bmN0aW9uIE1hcFRvKHJlc291cmNlVHlwZXMpIHtcbiAgICByZXR1cm4gKGNsYXp6LCBlZGl0Q29uZmlnID0gbnVsbCkgPT4ge1xuICAgICAgICByZXR1cm4gY29tcG9uZW50TWFwcGluZy5tYXAocmVzb3VyY2VUeXBlcywgY2xhenosIGVkaXRDb25maWcpO1xuICAgIH07XG59XG5cblxuZXhwb3J0IHsgY29tcG9uZW50TWFwcGluZyBhcyBDb21wb25lbnRNYXBwaW5nLCBNYXBUbyB9O1xuIl19