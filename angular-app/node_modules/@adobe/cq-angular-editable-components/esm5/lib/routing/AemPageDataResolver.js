/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
var AemPageDataResolver = /** @class */ (function () {
    function AemPageDataResolver() {
    }
    /**
     * Returns the absolute resource path without extension.
     * @example
     * // returns: '/content/aa/bb' for route.url [ 'content', 'aa', 'bb.html' ]
     * resolve(route)
     * @param route - route
     * @returns absolute resource path without extension
     */
    /**
     * Returns the absolute resource path without extension.
     * \@example
     * // returns: '/content/aa/bb' for route.url [ 'content', 'aa', 'bb.html' ]
     * resolve(route)
     * @param {?} route - route
     * @return {?} absolute resource path without extension
     */
    AemPageDataResolver.prototype.resolve = /**
     * Returns the absolute resource path without extension.
     * \@example
     * // returns: '/content/aa/bb' for route.url [ 'content', 'aa', 'bb.html' ]
     * resolve(route)
     * @param {?} route - route
     * @return {?} absolute resource path without extension
     */
    function (route) {
        return '/' + route.url.join('/').replace(/\.[^/.]+$/, '');
    };
    AemPageDataResolver.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    AemPageDataResolver.ctorParameters = function () { return []; };
    return AemPageDataResolver;
}());
export { AemPageDataResolver };
function AemPageDataResolver_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    AemPageDataResolver.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    AemPageDataResolver.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWVtUGFnZURhdGFSZXNvbHZlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhZG9iZS9jcS1hbmd1bGFyLWVkaXRhYmxlLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvcm91dGluZy9BZW1QYWdlRGF0YVJlc29sdmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztJQUt6QztLQUFnQjtJQUVoQjs7Ozs7OztPQU9HOzs7Ozs7Ozs7SUFDSCxxQ0FBTzs7Ozs7Ozs7SUFBUCxVQUFRLEtBQTZCO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUMzRDs7Z0JBZEYsVUFBVTs7Ozs4QkFIWDs7U0FJYSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXNvbHZlLCBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFlbVBhZ2VEYXRhUmVzb2x2ZXIgaW1wbGVtZW50cyBSZXNvbHZlIDwgc3RyaW5nID4ge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGFic29sdXRlIHJlc291cmNlIHBhdGggd2l0aG91dCBleHRlbnNpb24uXG4gICAqIEBleGFtcGxlXG4gICAqIC8vIHJldHVybnM6ICcvY29udGVudC9hYS9iYicgZm9yIHJvdXRlLnVybCBbICdjb250ZW50JywgJ2FhJywgJ2JiLmh0bWwnIF1cbiAgICogcmVzb2x2ZShyb3V0ZSlcbiAgICogQHBhcmFtIHJvdXRlIC0gcm91dGVcbiAgICogQHJldHVybnMgYWJzb2x1dGUgcmVzb3VyY2UgcGF0aCB3aXRob3V0IGV4dGVuc2lvblxuICAgKi9cbiAgcmVzb2x2ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCkge1xuICAgIHJldHVybiAnLycgKyByb3V0ZS51cmwuam9pbignLycpLnJlcGxhY2UoL1xcLlteLy5dKyQvLCAnJyk7XG4gIH1cbn1cbiJdfQ==