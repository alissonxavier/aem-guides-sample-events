{"version":3,"file":"adobe-cq-angular-editable-components.js.map","sources":["ng://@adobe/cq-angular-editable-components/lib/layout/component-mapping.ts","ng://@adobe/cq-angular-editable-components/lib/layout/constants.ts","ng://@adobe/cq-angular-editable-components/lib/layout/utils.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-component.directive.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-container/aem-container.component.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-responsivegrid/aem-responsivegrid.component.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-model-provider/aem-model-provider.component.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-page/aem-page.component.ts","ng://@adobe/cq-angular-editable-components/lib/cq-angular-editable-components.module.ts","ng://@adobe/cq-angular-editable-components/lib/routing/AemPageDataResolver.ts","ng://@adobe/cq-angular-editable-components/lib/routing/AemPageRouteReuseStrategy.ts"],"sourcesContent":["/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { ComponentMapping as SPAComponentMapping } from '@adobe/cq-spa-component-mapping';\n\n/**\n * The current class extends the @adobe/cq-spa-component-mapping#Mapto library and features with Angular specifics such as\n *\n * - Storing the editing configurations for each resource type\n */\nexport class ComponentMappingWithConfig {\n  /**\n   * Store of EditConfig structures\n   */\n  private editConfigMap = {};\n\n  constructor(private spaMapping:SPAComponentMapping) {}\n\n  /**\n   * Stores a component class for the given resource types and also allows to provide an EditConfig object\n   * @param resourceTypes - List of resource types\n   * @param clazz - Component class to be stored\n   * @param [editConfig] - Edit configuration to be stored for the given resource types\n   */\n  map(resourceTypes, clazz, editConfig = null) {\n      let innerClass = clazz;\n\n      if (editConfig) {\n          this.editConfigMap[resourceTypes] = editConfig;\n      }\n      this.spaMapping.map(resourceTypes, innerClass);\n  };\n\n  /**\n   * Returns the component class for the given resourceType\n   * @param resourceType - Resource type for which the component class has been stored\n   */\n  get(resourceType) {\n    return this.spaMapping.get(resourceType);\n  }\n\n  /**\n   * Returns the EditConfig structure for the given type\n   * @param resourceType - Resource type for which the configuration has been stored\n   */\n  getEditConfig(resourceType) {\n    return this.editConfigMap[resourceType];\n  }\n}\n\nlet componentMapping = new ComponentMappingWithConfig(SPAComponentMapping);\n\nfunction MapTo(resourceTypes) {\n    return (clazz, editConfig = null) => {\n        return componentMapping.map(resourceTypes, clazz, editConfig);\n    };\n}\n\n\nexport { componentMapping as ComponentMapping, MapTo };\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport {Constants as PMConstants} from '@adobe/cq-spa-page-model-manager';\n\nexport const Constants = {\n\n    /**\n     * Class names associated with a new section component\n     *\n     */\n    NEW_SECTION_CLASS_NAMES: 'new section',\n\n    TYPE_PROP: PMConstants.TYPE_PROP,\n\n    /**\n     * List of child items of an item\n     *\n     */\n    ITEMS_PROP: PMConstants.ITEMS_PROP,\n\n    /**\n     * Order in which the items should be listed\n     *\n     */\n    ITEMS_ORDER_PROP: PMConstants.ITEMS_ORDER_PROP,\n\n    /**\n     * Path of the item\n     *\n     */\n    PATH_PROP: PMConstants.PATH_PROP,\n\n    /**\n     * Children of an item\n     *\n     */\n    CHILDREN_PROP: PMConstants.CHILDREN_PROP,\n\n    /**\n     * Path of the resource in the model\n     *\n     */\n    DATA_PATH_PROP: ':dataPath',\n\n    /**\n     * Hierarchical type of the item\n     */\n    HIERARCHY_TYPE_PROP: PMConstants.HIERARCHY_TYPE_PROP\n};\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\n/**\n * Selector that identifies the node that contains the WCM mode state\n */\nconst WCM_MODE_META_SELECTOR:string = 'meta[property=\"cq:wcmmode\"]';\n\n/**\n * The editor is in one of the edition modes\n */\nconst EDIT_MODE:string = 'edit';\n\n/**\n * The editor is in preview mode\n */\nconst PREVIEW_MODE:string = 'preview';\n/**\n * Returns if we are in the browser context or not by checking for the\n * existence of the window object\n */\nfunction isBrowser() {\n    try {\n        return typeof window !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Returns the current WCM mode\n *\n * <p>Note that the value isn't, as of the date of this writing, updated by the editor</p>\n */\nfunction getWCMMode() {\n    if (isBrowser()) {\n      const wcmModeMeta:any = document.head.querySelector(WCM_MODE_META_SELECTOR);\n      return wcmModeMeta && wcmModeMeta.content;\n    }\n}\n\n/**\n * Helper functions for interacting with the AEM environment\n */\nexport const Utils = {\n\n    /**\n     * Is the app used in the context of the AEM Page editor\n     */\n    isInEditor() {\n        const wcmMode = getWCMMode();\n        return wcmMode && (EDIT_MODE === wcmMode || PREVIEW_MODE === wcmMode);\n    }\n};\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Directive, Input, Renderer2, NgZone, ViewContainerRef, ComponentFactoryResolver, ComponentRef, AfterViewInit } from '@angular/core';\n\nimport { ComponentMapping } from './component-mapping';\nimport { Constants } from './constants';\nimport { Utils } from './utils';\n\n\nconst PLACEHOLDER_CLASS_NAME = 'cq-placeholder';\n\n@Directive({\n  selector: '[aemComponent]'\n})\n\n/**\n * The current directive provides advanced capabilities among which are\n *\n * - The management of the component placeholder in the Page Editor\n * - The dynamic instantiation of components based on a component definition\n * - The conversion from model fields to properties and injection in the component instance\n * - The management of HTMLElement attributes and class names on the native element\n */\nexport class AEMComponentDirective implements AfterViewInit {\n  /**\n   * Dynamically created component\n   */\n  private _component:ComponentRef<any>;\n  /**\n   * Model item that corresponds to the current component\n   */\n  private _cqItem:object;\n\n  get cqItem(): object {\n    return this._cqItem;\n  }\n\n  @Input()\n  set cqItem(value: object) {\n    this._cqItem = value;\n    this.updateComponentData();\n  }\n\n  /**\n   * Path to the model structure associated with the current component\n   */\n  @Input() cqPath:string;\n  /**\n   * Name of the current instance of the component\n   */\n  @Input() itemName:string;\n  /**\n   * HtmlElement attributes for the current instance of the component\n   */\n  @Input() itemAttrs: object;\n\n  @Input() aemComponent;\n\n  constructor(\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    private factoryResolver: ComponentFactoryResolver,\n    private ngZone: NgZone) {\n  }\n\n  ngOnInit() {\n    this.renderComponent(ComponentMapping.get(this.type));\n  }\n\n  /**\n   * Returns the type of the cqItem if exists.\n   */\n  get type() {\n    return this.cqItem && this.cqItem[Constants.TYPE_PROP];\n  }\n  /**\n   * Renders a component dynamically based on the component definition\n   *\n   * @param componentDefinition The component definition to render\n   */\n  private renderComponent(componentDefinition:any) {\n    if (componentDefinition) {\n      const factory = this.factoryResolver.resolveComponentFactory(componentDefinition);\n      this.viewContainer.clear();\n      this._component = this.viewContainer.createComponent(factory);\n      this.updateComponentData();\n    }\n  }\n\n  /**\n   * Updates the data of the component based the data of the directive\n   */\n  private updateComponentData() {\n    if (!this._component || !this._component.instance) {\n      return;\n    }\n\n    let keys = Object.getOwnPropertyNames(this.cqItem);\n\n    keys.forEach((key) => {\n        let propKey = key;\n\n        if (propKey.startsWith(\":\")) {\n            // Transformation of internal properties namespaced with [:] to [cq]\n            // :myProperty => cqMyProperty\n            let tempKey = propKey.substr(1);\n            propKey = \"cq\" + tempKey.substr(0, 1).toUpperCase() + tempKey.substr(1);\n        }\n\n        this._component.instance[propKey] = this.cqItem[key];\n    });\n\n    this._component.instance.cqPath = this.cqPath;\n    this._component.instance.itemName = this.itemName;\n    let editConfig = ComponentMapping.getEditConfig(this.type);\n    if (editConfig && Utils.isInEditor) {\n      this.setupPlaceholder(editConfig);\n    }\n  }\n\n  /**\n   * Adds the specified item attributes to the element\n   */\n  private setupItemAttrs() {\n    if (this.itemAttrs) {\n      let keys = Object.getOwnPropertyNames(this.itemAttrs);\n\n      keys.forEach((key) => {\n        if (key === \"class\") {\n          let classes = this.itemAttrs[key].split(' ');\n          classes.forEach((itemClass) => {\n            this.renderer.addClass(this._component.location.nativeElement, itemClass);\n          });\n        } else {\n          this.renderer.setAttribute(this._component.location.nativeElement, key , this.itemAttrs[key]);\n        }\n      });\n    }\n  }\n\n  /**\n   * Determines if the placeholder should e displayed.\n   *\n   * @param editConfig - the edit config of the directive\n   */\n  private usePlaceholder(editConfig) {\n    return editConfig.isEmpty && typeof editConfig.isEmpty === \"function\" && editConfig.isEmpty(this.cqItem);\n  }\n\n  /**\n   * Setups the placeholder of needed for the AEM editor\n   *\n   * @param editConfig - the editConfig, which will dictate the classes to be added on.\n   */\n  private setupPlaceholder(editConfig) {\n    if (this.usePlaceholder(editConfig)) {\n        this.renderer.addClass(this._component.location.nativeElement, PLACEHOLDER_CLASS_NAME);\n        this.renderer.setAttribute(this._component.location.nativeElement, \"data-emptytext\", editConfig.emptyLabel);\n    } else {\n        this.renderer.removeClass(this._component.location.nativeElement, PLACEHOLDER_CLASS_NAME);\n        this.renderer.removeAttribute(this._component.location.nativeElement, \"data-emptytext\");\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setupItemAttrs();\n  }\n\n  ngOnDestroy() {\n    this._component && this._component.destroy();\n  }\n\n}\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { Constants } from '../constants'\nimport { Utils } from \"../utils\";\n\nconst PLACEHOLDER_CLASS_NAMES = Constants.NEW_SECTION_CLASS_NAMES;\nconst PLACEHOLDER_ITEM_NAME = '*';\nconst CONTAINER_CLASS_NAMES = 'aem-container';\n\n@Component({\n  selector: 'aem-container',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <ng-container [aemComponent] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey'></ng-container>\n  <div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n</ng-container>\n`\n})\n/**\n * The current component provides the base presentational logic common to containers such as a grid or a page.\n * Container have in common the notion of item holders. Items are represented in the model by the fields _:items_ and _:itemsOrder_\n */\nexport class AEMContainerComponent {\n  /**\n   * Map of model items included in the current container\n   */\n  @Input() cqItems;\n  /**\n   * Array of model item keys\n   */\n  @Input() cqItemsOrder;\n  /**\n   * Path to the model associated with the current instance of the component\n   */\n  @Input() cqPath:string = '';\n  /**\n   * Key of the model structure\n   */\n  @Input() modelName:string = '';\n  /**\n   * Class names of the current component\n   */\n  @Input() classNames: string;\n\n  /**\n   * Returns weather of not we are in the editor\n   */\n  get isInEditMode() {\n    return Utils.isInEditor();\n  }\n\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getDataPath(path) {\n    return this.cqPath ? this.cqPath + '/' + path : path;\n  }\n\n  /**\n   * Returns the item data from the cqModel\n   *\n   * @param itemKey - the itemKey to look for in the items.\n   */\n  getItem(itemKey) {\n    return this.cqItems && this.cqItems[itemKey];\n  }\n\n  /**\n   * Returns the class names of the container based on the data from the cqModel\n   */\n  getHostClassNames() {\n    return CONTAINER_CLASS_NAMES;\n  }\n\n  get hostClasses () {\n    return this.getHostClassNames();\n  }\n\n  /**\n   * Returns the placeholder classes\n   */\n  getPlaceholderClassNames() {\n    return PLACEHOLDER_CLASS_NAMES;\n  }\n\n  /**\n   * Returns the placeholder path\n   */\n  get placeholderPath() {\n    return this.cqPath && this.cqPath + '/' + PLACEHOLDER_ITEM_NAME;\n  }\n}\n\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { AEMContainerComponent } from '../aem-container/aem-container.component';\nimport { Constants } from '../constants';\n\nconst PLACEHOLDER_CLASS_NAMES = ' aem-Grid-newComponent';\nconst RESPONSIVE_GRID_TYPE = 'wcm/foundation/components/responsivegrid';\n\n@Component({\n  selector: 'aem-responsivegrid',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <div [aemModelProvider] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey' [class]=\"getColumnClassNames(itemKey)\" [attr.data-cq-data-path]='getAttrDataPath(itemKey)'>\n  </div>\n</ng-container>\n<div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n\n\n`,\n})\n/**\n * The current class carries the base presentational logic of the AEM Layout Container (aka. Responsive grid)\n */\nexport class AEMResponsiveGridComponent extends AEMContainerComponent {\n  /**\n   * Class names associated with the current responsive grid\n   */\n  @Input() gridClassNames: string;\n  /**\n   * Map of class names corresponding to each child of the current responsive grid\n   */\n  @Input() columnClassNames: Object;\n  /**\n   * Class names of the current component\n   */\n  @Input() classNames: string;\n  /**\n   * Current number of columns of the grid\n   */\n  @Input() columnCount: number;\n\n  /**\n   * Returns the column class names for a given column\n   * @param itemKey - The key of the column item\n   */\n  getColumnClassNames(itemKey:string) {\n    return this.columnClassNames && this.columnClassNames[itemKey];\n  }\n\n  /**\n   * Returns the placeholder classes\n   */\n  getPlaceholderClassNames() {\n    return super.getPlaceholderClassNames() + PLACEHOLDER_CLASS_NAMES;\n  }\n\n  /**\n   * Returns the class names of the responsive grid based on the data from the cqModel\n   */\n  getHostClassNames() {\n    let classNames = super.getHostClassNames();\n\n    if (this.classNames) {\n        classNames += ' ' + (this.classNames || '') ;\n    }\n\n    return classNames + ' ' + this.gridClassNames;\n  }\n\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getAttrDataPath(path) {\n    let item = this.getItem(path);\n    if (item && item[Constants.TYPE_PROP] === RESPONSIVE_GRID_TYPE) {\n      // We don't want to add the path for the wrapper for a reponsivegrid\n      // The reponsivegrid adds the path on it's own\n      return null;\n    }\n\n    return this.getDataPath(path);\n  }\n}\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input, NgZone } from '@angular/core';\nimport { ModelManager } from \"@adobe/cq-spa-page-model-manager\";\n\n@Component({\n  selector: '[aemModelProvider]',\n  template: `<ng-container [aemComponent] [cqItem]='cqItem' [cqPath]='cqPath' [itemName]='itemName'></ng-container>`\n})\n/**\n * The current component is responsible for providing access to the ModelManager and the model of a component\n */\nexport class AEMModelProviderComponent {\n  /**\n   * Path to the model associated with the current instance of the component\n   */\n  @Input() cqPath;\n  /**\n   * Model item associated with the current model provider component\n   */\n  @Input() cqItem;\n  /**\n   * Name of the item associated with the current model provider component\n   */\n  @Input() itemName;\n\n  @Input() aemModelProvider;\n\n  constructor(private ngZone: NgZone) {\n  }\n\n  /**\n   * Updates the item data\n   */\n  updateItem() {\n    ModelManager.getData({path: this.cqPath}).then(model => {\n        this.ngZone.run(() => {\n          this.cqItem = model;\n        });\n    });\n  }\n\n  ngOnInit() {\n    ModelManager.addListener(this.cqPath, this.updateItem.bind(this));\n  }\n\n  ngDestroy() {\n    ModelManager.removeListener(this.cqPath, this.updateItem.bind(this));\n  }\n}\n\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component } from '@angular/core';\nimport { AEMContainerComponent } from '../aem-container/aem-container.component';\n\nconst PAGE_MODEL_SEPARATOR = '/jcr:content/';\n\n@Component({\n  selector: 'aem-page',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <ng-container [aemComponent] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey'></ng-container>\n  <div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n</ng-container>\n`\n})\n/**\n * The current component carries the base presentational logic of page component\n */\nexport class AEMPageComponent extends AEMContainerComponent {\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getDataPath(path) {\n    return this.cqPath ? this.cqPath + PAGE_MODEL_SEPARATOR + path : path;\n  }\n\n}\n\n","/*\n *  Copyright 2018 Adobe Systems Incorporated. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { AEMComponentDirective } from \"./layout/aem-component.directive\";\nimport { AEMModelProviderComponent } from \"./layout/aem-model-provider/aem-model-provider.component\";\nimport { AEMContainerComponent } from \"./layout/aem-container/aem-container.component\";\nimport { AEMPageComponent } from \"./layout/aem-page/aem-page.component\";\nimport { AEMResponsiveGridComponent } from \"./layout/aem-responsivegrid/aem-responsivegrid.component\";\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n\n  declarations: [AEMContainerComponent, AEMResponsiveGridComponent, AEMComponentDirective, AEMModelProviderComponent, AEMPageComponent],\n  exports: [AEMContainerComponent, AEMResponsiveGridComponent, AEMComponentDirective, AEMModelProviderComponent, AEMPageComponent],\n  entryComponents: [AEMContainerComponent, AEMResponsiveGridComponent, AEMPageComponent]\n})\nexport class SpaAngularEditableComponentsModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AemPageDataResolver implements Resolve < string > {\n  constructor() {}\n\n  /**\n   * Returns the absolute resource path without extension.\n   * @example\n   * // returns: '/content/aa/bb' for route.url [ 'content', 'aa', 'bb.html' ]\n   * resolve(route)\n   * @param route - route\n   * @returns absolute resource path without extension\n   */\n  resolve(route: ActivatedRouteSnapshot) {\n    return '/' + route.url.join('/').replace(/\\.[^/.]+$/, '');\n  }\n}\n","import { ActivatedRouteSnapshot, RouteReuseStrategy, DetachedRouteHandle } from '@angular/router';\n\n/**\n * Implements RouteReuseStrategy to customize route reuse.\n */\nexport class AemPageRouteReuseStrategy implements RouteReuseStrategy {\n  /** Determines if this route (and its subtree) should be detached to be reused later. */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /** Not storing deteached route. */\n  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {}\n\n  /** Determines if this route (and its subtree) should be reattached. */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /** Retrieves the previously stored route. */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /** Determines if a route should be reused */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n}\n"],"names":["SPAComponentMapping","Constants","PMConstants","ComponentMapping","PLACEHOLDER_CLASS_NAMES"],"mappings":"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"}
