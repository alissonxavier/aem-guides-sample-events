{"version":3,"sources":["ng://@adobe/cq-angular-editable-components/lib/layout/component-mapping.ts","ng://@adobe/cq-angular-editable-components/lib/layout/constants.ts","ng://@adobe/cq-angular-editable-components/lib/layout/utils.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-component.directive.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-container/aem-container.component.ts","null","ng://@adobe/cq-angular-editable-components/lib/layout/aem-responsivegrid/aem-responsivegrid.component.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-model-provider/aem-model-provider.component.ts","ng://@adobe/cq-angular-editable-components/lib/layout/aem-page/aem-page.component.ts","ng://@adobe/cq-angular-editable-components/lib/cq-angular-editable-components.module.ts","ng://@adobe/cq-angular-editable-components/lib/routing/AemPageDataResolver.ts","ng://@adobe/cq-angular-editable-components/lib/routing/AemPageRouteReuseStrategy.ts"],"names":["ComponentMappingWithConfig","spaMapping","this","prototype","map","resourceTypes","clazz","editConfig","innerClass","editConfigMap","get","resourceType","getEditConfig","componentMapping","SPAComponentMapping","Constants","NEW_SECTION_CLASS_NAMES","TYPE_PROP","PMConstants","ITEMS_PROP","ITEMS_ORDER_PROP","PATH_PROP","CHILDREN_PROP","DATA_PATH_PROP","HIERARCHY_TYPE_PROP","getWCMMode","window","e","isBrowser","wcmModeMeta","document","head","querySelector","content","Utils","isInEditor","wcmMode","PLACEHOLDER_CLASS_NAME","AEMComponentDirective","renderer","viewContainer","factoryResolver","ngZone","Object","defineProperty","_cqItem","value","updateComponentData","ngOnInit","renderComponent","ComponentMapping","type","cqItem","componentDefinition","factory","resolveComponentFactory","clear","_component","createComponent","instance","getOwnPropertyNames","forEach","key","propKey","startsWith","tempKey","substr","toUpperCase","_this","cqPath","itemName","setupPlaceholder","setupItemAttrs","itemAttrs","split","itemClass","addClass","location","nativeElement","setAttribute","usePlaceholder","isEmpty","emptyLabel","removeClass","removeAttribute","ngAfterViewInit","ngOnDestroy","destroy","Directive","args","selector","Renderer2","ViewContainerRef","ComponentFactoryResolver","NgZone","Input","PLACEHOLDER_CLASS_NAMES","AEMContainerComponent","getDataPath","path","getItem","itemKey","cqItems","getHostClassNames","getPlaceholderClassNames","Component","host","[class]","[attr.data-cq-data-path]","template","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","create","tslib_1.__extends","AEMResponsiveGridComponent","getColumnClassNames","columnClassNames","_super","call","classNames","gridClassNames","getAttrDataPath","item","AEMModelProviderComponent","updateItem","ModelManager","getData","then","model","run","addListener","bind","ngDestroy","removeListener","AEMPageComponent","NgModule","imports","CommonModule","declarations","exports","entryComponents","AemPageDataResolver","resolve","route","url","join","replace","Injectable","AemPageRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","future","curr"],"mappings":"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","sourcesContent":["/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { ComponentMapping as SPAComponentMapping } from '@adobe/cq-spa-component-mapping';\n\n/**\n * The current class extends the @adobe/cq-spa-component-mapping#Mapto library and features with Angular specifics such as\n *\n * - Storing the editing configurations for each resource type\n */\nexport class ComponentMappingWithConfig {\n  /**\n   * Store of EditConfig structures\n   */\n  private editConfigMap = {};\n\n  constructor(private spaMapping:SPAComponentMapping) {}\n\n  /**\n   * Stores a component class for the given resource types and also allows to provide an EditConfig object\n   * @param resourceTypes - List of resource types\n   * @param clazz - Component class to be stored\n   * @param [editConfig] - Edit configuration to be stored for the given resource types\n   */\n  map(resourceTypes, clazz, editConfig = null) {\n      let innerClass = clazz;\n\n      if (editConfig) {\n          this.editConfigMap[resourceTypes] = editConfig;\n      }\n      this.spaMapping.map(resourceTypes, innerClass);\n  };\n\n  /**\n   * Returns the component class for the given resourceType\n   * @param resourceType - Resource type for which the component class has been stored\n   */\n  get(resourceType) {\n    return this.spaMapping.get(resourceType);\n  }\n\n  /**\n   * Returns the EditConfig structure for the given type\n   * @param resourceType - Resource type for which the configuration has been stored\n   */\n  getEditConfig(resourceType) {\n    return this.editConfigMap[resourceType];\n  }\n}\n\nlet componentMapping = new ComponentMappingWithConfig(SPAComponentMapping);\n\nfunction MapTo(resourceTypes) {\n    return (clazz, editConfig = null) => {\n        return componentMapping.map(resourceTypes, clazz, editConfig);\n    };\n}\n\n\nexport { componentMapping as ComponentMapping, MapTo };\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport {Constants as PMConstants} from '@adobe/cq-spa-page-model-manager';\n\nexport const Constants = {\n\n    /**\n     * Class names associated with a new section component\n     *\n     */\n    NEW_SECTION_CLASS_NAMES: 'new section',\n\n    TYPE_PROP: PMConstants.TYPE_PROP,\n\n    /**\n     * List of child items of an item\n     *\n     */\n    ITEMS_PROP: PMConstants.ITEMS_PROP,\n\n    /**\n     * Order in which the items should be listed\n     *\n     */\n    ITEMS_ORDER_PROP: PMConstants.ITEMS_ORDER_PROP,\n\n    /**\n     * Path of the item\n     *\n     */\n    PATH_PROP: PMConstants.PATH_PROP,\n\n    /**\n     * Children of an item\n     *\n     */\n    CHILDREN_PROP: PMConstants.CHILDREN_PROP,\n\n    /**\n     * Path of the resource in the model\n     *\n     */\n    DATA_PATH_PROP: ':dataPath',\n\n    /**\n     * Hierarchical type of the item\n     */\n    HIERARCHY_TYPE_PROP: PMConstants.HIERARCHY_TYPE_PROP\n};\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\n/**\n * Selector that identifies the node that contains the WCM mode state\n */\nconst WCM_MODE_META_SELECTOR:string = 'meta[property=\"cq:wcmmode\"]';\n\n/**\n * The editor is in one of the edition modes\n */\nconst EDIT_MODE:string = 'edit';\n\n/**\n * The editor is in preview mode\n */\nconst PREVIEW_MODE:string = 'preview';\n/**\n * Returns if we are in the browser context or not by checking for the\n * existence of the window object\n */\nfunction isBrowser() {\n    try {\n        return typeof window !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Returns the current WCM mode\n *\n * <p>Note that the value isn't, as of the date of this writing, updated by the editor</p>\n */\nfunction getWCMMode() {\n    if (isBrowser()) {\n      const wcmModeMeta:any = document.head.querySelector(WCM_MODE_META_SELECTOR);\n      return wcmModeMeta && wcmModeMeta.content;\n    }\n}\n\n/**\n * Helper functions for interacting with the AEM environment\n */\nexport const Utils = {\n\n    /**\n     * Is the app used in the context of the AEM Page editor\n     */\n    isInEditor() {\n        const wcmMode = getWCMMode();\n        return wcmMode && (EDIT_MODE === wcmMode || PREVIEW_MODE === wcmMode);\n    }\n};\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Directive, Input, Renderer2, NgZone, ViewContainerRef, ComponentFactoryResolver, ComponentRef, AfterViewInit } from '@angular/core';\n\nimport { ComponentMapping } from './component-mapping';\nimport { Constants } from './constants';\nimport { Utils } from './utils';\n\n\nconst PLACEHOLDER_CLASS_NAME = 'cq-placeholder';\n\n@Directive({\n  selector: '[aemComponent]'\n})\n\n/**\n * The current directive provides advanced capabilities among which are\n *\n * - The management of the component placeholder in the Page Editor\n * - The dynamic instantiation of components based on a component definition\n * - The conversion from model fields to properties and injection in the component instance\n * - The management of HTMLElement attributes and class names on the native element\n */\nexport class AEMComponentDirective implements AfterViewInit {\n  /**\n   * Dynamically created component\n   */\n  private _component:ComponentRef<any>;\n  /**\n   * Model item that corresponds to the current component\n   */\n  private _cqItem:object;\n\n  get cqItem(): object {\n    return this._cqItem;\n  }\n\n  @Input()\n  set cqItem(value: object) {\n    this._cqItem = value;\n    this.updateComponentData();\n  }\n\n  /**\n   * Path to the model structure associated with the current component\n   */\n  @Input() cqPath:string;\n  /**\n   * Name of the current instance of the component\n   */\n  @Input() itemName:string;\n  /**\n   * HtmlElement attributes for the current instance of the component\n   */\n  @Input() itemAttrs: object;\n\n  @Input() aemComponent;\n\n  constructor(\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    private factoryResolver: ComponentFactoryResolver,\n    private ngZone: NgZone) {\n  }\n\n  ngOnInit() {\n    this.renderComponent(ComponentMapping.get(this.type));\n  }\n\n  /**\n   * Returns the type of the cqItem if exists.\n   */\n  get type() {\n    return this.cqItem && this.cqItem[Constants.TYPE_PROP];\n  }\n  /**\n   * Renders a component dynamically based on the component definition\n   *\n   * @param componentDefinition The component definition to render\n   */\n  private renderComponent(componentDefinition:any) {\n    if (componentDefinition) {\n      const factory = this.factoryResolver.resolveComponentFactory(componentDefinition);\n      this.viewContainer.clear();\n      this._component = this.viewContainer.createComponent(factory);\n      this.updateComponentData();\n    }\n  }\n\n  /**\n   * Updates the data of the component based the data of the directive\n   */\n  private updateComponentData() {\n    if (!this._component || !this._component.instance) {\n      return;\n    }\n\n    let keys = Object.getOwnPropertyNames(this.cqItem);\n\n    keys.forEach((key) => {\n        let propKey = key;\n\n        if (propKey.startsWith(\":\")) {\n            // Transformation of internal properties namespaced with [:] to [cq]\n            // :myProperty => cqMyProperty\n            let tempKey = propKey.substr(1);\n            propKey = \"cq\" + tempKey.substr(0, 1).toUpperCase() + tempKey.substr(1);\n        }\n\n        this._component.instance[propKey] = this.cqItem[key];\n    });\n\n    this._component.instance.cqPath = this.cqPath;\n    this._component.instance.itemName = this.itemName;\n    let editConfig = ComponentMapping.getEditConfig(this.type);\n    if (editConfig && Utils.isInEditor) {\n      this.setupPlaceholder(editConfig);\n    }\n  }\n\n  /**\n   * Adds the specified item attributes to the element\n   */\n  private setupItemAttrs() {\n    if (this.itemAttrs) {\n      let keys = Object.getOwnPropertyNames(this.itemAttrs);\n\n      keys.forEach((key) => {\n        if (key === \"class\") {\n          let classes = this.itemAttrs[key].split(' ');\n          classes.forEach((itemClass) => {\n            this.renderer.addClass(this._component.location.nativeElement, itemClass);\n          });\n        } else {\n          this.renderer.setAttribute(this._component.location.nativeElement, key , this.itemAttrs[key]);\n        }\n      });\n    }\n  }\n\n  /**\n   * Determines if the placeholder should e displayed.\n   *\n   * @param editConfig - the edit config of the directive\n   */\n  private usePlaceholder(editConfig) {\n    return editConfig.isEmpty && typeof editConfig.isEmpty === \"function\" && editConfig.isEmpty(this.cqItem);\n  }\n\n  /**\n   * Setups the placeholder of needed for the AEM editor\n   *\n   * @param editConfig - the editConfig, which will dictate the classes to be added on.\n   */\n  private setupPlaceholder(editConfig) {\n    if (this.usePlaceholder(editConfig)) {\n        this.renderer.addClass(this._component.location.nativeElement, PLACEHOLDER_CLASS_NAME);\n        this.renderer.setAttribute(this._component.location.nativeElement, \"data-emptytext\", editConfig.emptyLabel);\n    } else {\n        this.renderer.removeClass(this._component.location.nativeElement, PLACEHOLDER_CLASS_NAME);\n        this.renderer.removeAttribute(this._component.location.nativeElement, \"data-emptytext\");\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setupItemAttrs();\n  }\n\n  ngOnDestroy() {\n    this._component && this._component.destroy();\n  }\n\n}\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { Constants } from '../constants'\nimport { Utils } from \"../utils\";\n\nconst PLACEHOLDER_CLASS_NAMES = Constants.NEW_SECTION_CLASS_NAMES;\nconst PLACEHOLDER_ITEM_NAME = '*';\nconst CONTAINER_CLASS_NAMES = 'aem-container';\n\n@Component({\n  selector: 'aem-container',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <ng-container [aemComponent] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey'></ng-container>\n  <div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n</ng-container>\n`\n})\n/**\n * The current component provides the base presentational logic common to containers such as a grid or a page.\n * Container have in common the notion of item holders. Items are represented in the model by the fields _:items_ and _:itemsOrder_\n */\nexport class AEMContainerComponent {\n  /**\n   * Map of model items included in the current container\n   */\n  @Input() cqItems;\n  /**\n   * Array of model item keys\n   */\n  @Input() cqItemsOrder;\n  /**\n   * Path to the model associated with the current instance of the component\n   */\n  @Input() cqPath:string = '';\n  /**\n   * Key of the model structure\n   */\n  @Input() modelName:string = '';\n  /**\n   * Class names of the current component\n   */\n  @Input() classNames: string;\n\n  /**\n   * Returns weather of not we are in the editor\n   */\n  get isInEditMode() {\n    return Utils.isInEditor();\n  }\n\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getDataPath(path) {\n    return this.cqPath ? this.cqPath + '/' + path : path;\n  }\n\n  /**\n   * Returns the item data from the cqModel\n   *\n   * @param itemKey - the itemKey to look for in the items.\n   */\n  getItem(itemKey) {\n    return this.cqItems && this.cqItems[itemKey];\n  }\n\n  /**\n   * Returns the class names of the container based on the data from the cqModel\n   */\n  getHostClassNames() {\n    return CONTAINER_CLASS_NAMES;\n  }\n\n  get hostClasses () {\n    return this.getHostClassNames();\n  }\n\n  /**\n   * Returns the placeholder classes\n   */\n  getPlaceholderClassNames() {\n    return PLACEHOLDER_CLASS_NAMES;\n  }\n\n  /**\n   * Returns the placeholder path\n   */\n  get placeholderPath() {\n    return this.cqPath && this.cqPath + '/' + PLACEHOLDER_ITEM_NAME;\n  }\n}\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { AEMContainerComponent } from '../aem-container/aem-container.component';\nimport { Constants } from '../constants';\n\nconst PLACEHOLDER_CLASS_NAMES = ' aem-Grid-newComponent';\nconst RESPONSIVE_GRID_TYPE = 'wcm/foundation/components/responsivegrid';\n\n@Component({\n  selector: 'aem-responsivegrid',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <div [aemModelProvider] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey' [class]=\"getColumnClassNames(itemKey)\" [attr.data-cq-data-path]='getAttrDataPath(itemKey)'>\n  </div>\n</ng-container>\n<div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n\n\n`,\n})\n/**\n * The current class carries the base presentational logic of the AEM Layout Container (aka. Responsive grid)\n */\nexport class AEMResponsiveGridComponent extends AEMContainerComponent {\n  /**\n   * Class names associated with the current responsive grid\n   */\n  @Input() gridClassNames: string;\n  /**\n   * Map of class names corresponding to each child of the current responsive grid\n   */\n  @Input() columnClassNames: Object;\n  /**\n   * Class names of the current component\n   */\n  @Input() classNames: string;\n  /**\n   * Current number of columns of the grid\n   */\n  @Input() columnCount: number;\n\n  /**\n   * Returns the column class names for a given column\n   * @param itemKey - The key of the column item\n   */\n  getColumnClassNames(itemKey:string) {\n    return this.columnClassNames && this.columnClassNames[itemKey];\n  }\n\n  /**\n   * Returns the placeholder classes\n   */\n  getPlaceholderClassNames() {\n    return super.getPlaceholderClassNames() + PLACEHOLDER_CLASS_NAMES;\n  }\n\n  /**\n   * Returns the class names of the responsive grid based on the data from the cqModel\n   */\n  getHostClassNames() {\n    let classNames = super.getHostClassNames();\n\n    if (this.classNames) {\n        classNames += ' ' + (this.classNames || '') ;\n    }\n\n    return classNames + ' ' + this.gridClassNames;\n  }\n\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getAttrDataPath(path) {\n    let item = this.getItem(path);\n    if (item && item[Constants.TYPE_PROP] === RESPONSIVE_GRID_TYPE) {\n      // We don't want to add the path for the wrapper for a reponsivegrid\n      // The reponsivegrid adds the path on it's own\n      return null;\n    }\n\n    return this.getDataPath(path);\n  }\n}\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component, Input, NgZone } from '@angular/core';\nimport { ModelManager } from \"@adobe/cq-spa-page-model-manager\";\n\n@Component({\n  selector: '[aemModelProvider]',\n  template: `<ng-container [aemComponent] [cqItem]='cqItem' [cqPath]='cqPath' [itemName]='itemName'></ng-container>`\n})\n/**\n * The current component is responsible for providing access to the ModelManager and the model of a component\n */\nexport class AEMModelProviderComponent {\n  /**\n   * Path to the model associated with the current instance of the component\n   */\n  @Input() cqPath;\n  /**\n   * Model item associated with the current model provider component\n   */\n  @Input() cqItem;\n  /**\n   * Name of the item associated with the current model provider component\n   */\n  @Input() itemName;\n\n  @Input() aemModelProvider;\n\n  constructor(private ngZone: NgZone) {\n  }\n\n  /**\n   * Updates the item data\n   */\n  updateItem() {\n    ModelManager.getData({path: this.cqPath}).then(model => {\n        this.ngZone.run(() => {\n          this.cqItem = model;\n        });\n    });\n  }\n\n  ngOnInit() {\n    ModelManager.addListener(this.cqPath, this.updateItem.bind(this));\n  }\n\n  ngDestroy() {\n    ModelManager.removeListener(this.cqPath, this.updateItem.bind(this));\n  }\n}\n\n","/*\n * ADOBE CONFIDENTIAL\n *\n * Copyright 2018 Adobe Systems Incorporated\n * All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe Systems Incorporated and its suppliers,\n * if any.  The intellectual and technical concepts contained\n * herein are proprietary to Adobe Systems Incorporated and its\n * suppliers and may be covered by U.S. and Foreign Patents,\n * patents in process, and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe Systems Incorporated.\n */\n\nimport { Component } from '@angular/core';\nimport { AEMContainerComponent } from '../aem-container/aem-container.component';\n\nconst PAGE_MODEL_SEPARATOR = '/jcr:content/';\n\n@Component({\n  selector: 'aem-page',\n  host: {\n      '[class]': 'hostClasses',\n      '[attr.data-cq-data-path]':'cqPath'\n  },\n  template: `<ng-container *ngFor=\"let itemKey of cqItemsOrder\">\n  <ng-container [aemComponent] [cqItem]='getItem(itemKey)' [cqPath]='getDataPath(itemKey)' [itemName]='itemKey'></ng-container>\n  <div *ngIf=\"isInEditMode\" [attr.data-cq-data-path]=\"placeholderPath\" [class]=\"getPlaceholderClassNames()\"></div>\n</ng-container>\n`\n})\n/**\n * The current component carries the base presentational logic of page component\n */\nexport class AEMPageComponent extends AEMContainerComponent {\n  /**\n   * Returns the aggregated path of this container path and the provided path\n   *\n   * @param path - the provided path to aggregate with the container path\n   */\n  getDataPath(path) {\n    return this.cqPath ? this.cqPath + PAGE_MODEL_SEPARATOR + path : path;\n  }\n\n}\n\n","/*\n *  Copyright 2018 Adobe Systems Incorporated. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { AEMComponentDirective } from \"./layout/aem-component.directive\";\nimport { AEMModelProviderComponent } from \"./layout/aem-model-provider/aem-model-provider.component\";\nimport { AEMContainerComponent } from \"./layout/aem-container/aem-container.component\";\nimport { AEMPageComponent } from \"./layout/aem-page/aem-page.component\";\nimport { AEMResponsiveGridComponent } from \"./layout/aem-responsivegrid/aem-responsivegrid.component\";\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n\n  declarations: [AEMContainerComponent, AEMResponsiveGridComponent, AEMComponentDirective, AEMModelProviderComponent, AEMPageComponent],\n  exports: [AEMContainerComponent, AEMResponsiveGridComponent, AEMComponentDirective, AEMModelProviderComponent, AEMPageComponent],\n  entryComponents: [AEMContainerComponent, AEMResponsiveGridComponent, AEMPageComponent]\n})\nexport class SpaAngularEditableComponentsModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AemPageDataResolver implements Resolve < string > {\n  constructor() {}\n\n  /**\n   * Returns the absolute resource path without extension.\n   * @example\n   * // returns: '/content/aa/bb' for route.url [ 'content', 'aa', 'bb.html' ]\n   * resolve(route)\n   * @param route - route\n   * @returns absolute resource path without extension\n   */\n  resolve(route: ActivatedRouteSnapshot) {\n    return '/' + route.url.join('/').replace(/\\.[^/.]+$/, '');\n  }\n}\n","import { ActivatedRouteSnapshot, RouteReuseStrategy, DetachedRouteHandle } from '@angular/router';\n\n/**\n * Implements RouteReuseStrategy to customize route reuse.\n */\nexport class AemPageRouteReuseStrategy implements RouteReuseStrategy {\n  /** Determines if this route (and its subtree) should be detached to be reused later. */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /** Not storing deteached route. */\n  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {}\n\n  /** Determines if this route (and its subtree) should be reattached. */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /** Retrieves the previously stored route. */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /** Determines if a route should be reused */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n}\n"]}